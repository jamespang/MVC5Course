@model IEnumerable<MVC5Course.Models.Product>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<form action="/Products/Index" method="post">
    @*<input type="search" name="keyword" value="" />*@
    @*將輸入欄位改用 @Html.TextBox("keyword") 輸出*@
    @Html.TextBox("keyword")
    <input type="submit" name="" value="搜尋" />
</form>

<p>
    @{
        @:From Controller: @ViewBag.controller
    }
</p>

<p>
    @{
        @:From View: @ViewBag.keyword
    }
</p>

@using PagedList
@using PagedList.Mvc

@*@Html.PagedListPager((IPagedList)ViewBag.onePageOfProducts, page => Url.Action("Index", new { page }))*@

@Html.PagedListPager(Model as IPagedList, (p) => Url.Action("Index", new { page = p }))

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductName)
        </th>
        <th>
            <a href=@Url.Action("Index", "Products", new { keyword = ViewBag.keyword, sortBy = "+Price", page = ViewBag.page })>↑</a>
            @Html.DisplayNameFor(model => model.Price)
            <a href=@Url.Action("Index", "Products", new { keyword = ViewBag.keyword, sortBy = "-Price", page = ViewBag.page })>↓</a>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Active)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Stock)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model@*ViewBag.onePageOfProducts*@)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
                @*@item.ProductName*@
                
            </td>
            @*示範動態判斷 View 的顯示條件*@
            <td class="@(item.Price > 100 ? "text-danger" : "")">
                @*@Html.DisplayFor(modelItem => item.Price)*@
                @*將 Price 顯示為沒有小數點（在 View 中實作）*@
                @String.Format("{0:N0}", item.Price)
                @*@item.Price*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
                @*@item.Active*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
                @*@item.Stock*@
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ProductId }) |
                @Html.ActionLink("Details", "Details", new { id = item.ProductId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ProductId })
            </td>
        </tr>
    }
</table>

@*<ul>
    @foreach (var product in ViewBag.OnePageOfProducts)
    {
        <li>@product.ProductName</li>
    }
</ul>*@
